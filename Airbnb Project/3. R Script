## Installing the necessary packages to conduct the analysis
install.packages("readr")
library(readr)
install.packages("tidyr")
library(tidyr)
install.packages("dplyr")
library(dplyr)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggmap")
library(ggmap)

1. summary_total_reviews_room_type <- Airbnb_cleaned_listings %>%
  group_by(room_type) %>%
  summarise(total_reviews = sum(number_of_reviews)) %>%
  arrange(desc(total_reviews))

ggplot(summary_total_reviews_room_type, aes(x = reorder(room_type, total_reviews), y = total_reviews)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +
  labs(title = "Total Reviews by Room Type",
       x = "Room Type",
       y = "Total Reviews") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  scale_y_continuous(labels = function(x) format(x, scientific = FALSE)) 

2. summary_avg_availability <- Airbnb_cleaned_listings %>%
  group_by(room_type) %>%
  summarise(avg_availability_365 = round(mean(availability_365, na.rm = TRUE))) %>%
  arrange((avg_availability_365))

ggplot(summary_avg_availability, aes(x = reorder(room_type, avg_availability_365), y = avg_availability_365)) +
  geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
  labs(title = "Average Availability by Room Type",
       x = "Room Type",
       y = "Average Availability (365 days)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

3. summary_neighbourhood_price <- Airbnb_cleaned_listings %>%
  group_by(neighbourhood) %>%
  summarise(avg_price = mean(price, na.rm = TRUE)) %>%
  arrange((avg_price))

ggplot(summary_neighbourhood_price, aes(x = reorder(neighbourhood, avg_price), y = avg_price)) +
  geom_bar(stat = "identity", fill = "skyblue", color = "black") +
  labs(title = "Average Price by Neighborhood", x = "Neighborhood", y = "Average Price") +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))


4. summary_median_avail_neighbourhood <- Airbnb_cleaned_listings %>%
  group_by(neighbourhood) %>%
  summarise(avg_avail = round(mean(availability_365))) %>%
  arrange(avg_avail)

ggplot(summary_median_avail_neighbourhood, aes(x = avg_avail, y = reorder(neighbourhood, avg_avail))) +
  geom_bar(stat = "identity", fill = "lightblue", color = "black", width = 0.7) +
  labs(title = "Average Availability by Neighborhood",
       y = "Neighborhood",
       x = "Average Availability (365 days)") +
  theme(axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5)) +
  theme_minimal()

  # Register your Google Maps API key
  register_google(key = "************************")
  
  # Getting a map of London
  london_map <- get_map(location = "London", zoom = 11, maptype = "roadmap")

  # Plotting the map
  ggmap(london_map) +
    geom_point(data = Airbnb_Cleaned, aes(x = longitude, y = latitude), size = 0.1, colour = "red", alpha = 0.5) +
    labs(title = "Map of London Listings", x = "Longitude", y = "Latitude")
